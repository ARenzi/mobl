application znake

import mobl::canvas
import mobl::socket2
import mobl::ui::generic
import data

resource apple.gif
resource dropping.gif

screen root() {
  var playerName = ""
  header("Snake MMOG") {
    button("Play", onclick={
      if(playerName != "") {
        play(playerName.substr(0, 20).replace(/<[^>]*>/, ""));
      } else {
        alert("Name cannot be empty.");
      }
    })
  }
  group {
    item {
      textField(playerName, placeholder="Your name")
    }
  }
}

external sync function registerKeyPress(handler : Callback) : void

screen play(playerName : String) {
  var g : Graphics = null
  var appleImg = loadImage("apple.gif")
  var droppingImg = loadImage("dropping.gif")
  var playerInfo : String = ""

  function drawElement(e : Dynamic) {
    if(e.type == 0) { // Player
      var p : Player = e;
      if(p.isDead) {
        g.fillStyle = "red";
        g.fillText(p.name + " is dead", 0, 10);
      } else {
        g.fillStyle = p.color;
        for((x, y) in p.tail) {
          g.fillRect(x * 10, y * 10, 10, 10);
        }
        g.fillStyle = "black";
        g.fillText(p.name, p.tail.get(0)._1 * 10, p.tail.get(0)._2 * 10);
      }
      playerInfo = playerInfo + "<tr><td>" + p.name + ":</td><td>" + p.score + "</td></tr>";
    } else if(e.type == 1) { // Apple
      var apple : Apple = e;
      g.drawImage(appleImg, apple.x*10, apple.y*10);
    } else {
      var dropping : Dropping = e;
      g.drawImage(droppingImg, dropping.x*10, dropping.y*10);
    }
  }

  function clear() {
    g.fillStyle = "white";
    g.fillRect(0, 0, 500, 500);
  }

  function receiveUpdate(elements : [Dynamic]) {
    clear();
    playerInfo = "";
    for(e in elements) {
      drawElement(e);
    }
  }

  function disconnected() {
    alert("Disconnected.");
  }

  var socket : Socket = null

  script {
    async {
      sleep(200);
      socket = Socket.join("znake", onmessage=receiveUpdate, ondisconnect=disconnected);
      socket.send(playerName);
    }
    registerKeyPress({
      if(event.which == 37) {
        socket.send("left");
      } else if(event.which == 39) {
        socket.send("right");
      } else if(event.which == 32) {
        socket.send("drop");
      }
    });
  }

  header("Snake")
  block {
    button("Left", onclick={ socket.send("left"); })
    button("Right", onclick={ socket.send("right"); })
    button("Drop", onclick={ socket.send("drop"); })
    "You can also use left, right and space on your keyboard"
  }
  floatBox(right=10, top=10) {
    <table>
    html(playerInfo)
    </table>
  }
  canvas(g, 500, 500)
}

<javascript>
znake.registerKeyPress = function(cb) {
  $(window).keyup(cb);
};
</javascript>
application draw

import mobl::canvas
import mobl::socket
import mobl::ui::generic

type Update {
  color : String
  penSize : Num
  path : [(Num, Num)]
}

screen root() {
  var g : Graphics = null
  var buffer : [(Num, Num)] = []
  var color = "black"
  var penSize = 10

  function drawPoint(color : String, penSize : Num, x : Num, y : Num) {
    g.fillStyle = color;
    g.beginPath();
    g.arc(x, y, penSize, 0, 3.1415 * 2, false);
    g.closePath();
    g.fill();
  }

  function clear() {
    g.fillStyle = "white";
    g.fillRect(0, 0, 640, 640);
  }

  function receivePath(update : Update) {
    for((x, y) in update.path) {
      drawPoint(update.color, update.penSize, x, y);
    }
  }

  var socket : Socket = Socket.create(receivePath)

  header("mobl draw")
  block {
    <span style="background-color: " + color + "; width=60px; height=60px;">"Color"</span>
    button("Black", onclick={ color="black"; })
    button("Red", onclick={ color="red"; })
    button("Blue", onclick={ color="blue"; })
    button("Eraser", onclick={ color="#f0f0f0"; })
    "Pen size: " label(penSize)
    button("+", onclick={ penSize = penSize + 5; })
    button("-", onclick={ penSize = penSize - 5; })
  }

  canvas(g, 640, 640, ontouchstart={
    buffer.push((event.x, event.y));
    drawPoint(color, penSize, event.x, event.y);
  }, ontouchmove={
    buffer.push((event.x, event.y));
    drawPoint(color, penSize, event.x, event.y);
  })
  script {
    repeat(500, {
      if(buffer.length > 0) {
        socket.send(Update(color=color, penSize=penSize, path=buffer));
        buffer = [];
      }
    });
  }
}
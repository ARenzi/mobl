application jqdemo

import mobl::ui::jq

screen root() {
  header("Hello")
  content {
    group {
      itemArrow(onclick={ buttons(); }) { "Buttons" }
      itemArrow(onclick={ lists(); }) { "Lists" }
      itemArrow(onclick={ forms(); }) { "Forms" }
    }
  }
}

screen buttons() {
  header("Buttons") {
    backButton()
    //button("Button", onclick={ alert("Click!"); })
  }
  content {
    group {
      item {
        "Some item"
      }
    }
    button("Usual button")
  }
}

screen lists() {
  header("Lists") {
    backButton()
  }
  content {
    group {
      item { "Group item" }
      itemArrow(onclick={ clickedArrow(); }) { "Arrowed group item" }
      itemGroup { "New item group" }
      item {
        "Another item"
        itemAside {
          "2:20"
        }
      }
      item {
          itemHead("Item head")
          itemDescription {
            "Description"
          }
          itemNumber(3.1415)
        }

    }
  }
}

screen clickedArrow() {
  header("Waddup!?") {
    backButton()
  }
}

screen forms() {
  header("Forms") {
    backButton()
  }
  content {
    textField("", label="Full name:")
    textArea("", label="Bio:")
    controlGroup {
        checkBoxItem(true, "Check box item 1")
        checkBoxItem(false, "Check box item 2")
    }
    controlGroup(horizontal=true) {
      checkItem(true, "Item 1")
      checkItem(false, "Item 2")
    }
  }
}

/*screen tabs() {
  control tab1() {
    header("Tab 1") { backButton() }
    "This is the first tab"
  }

  control tab2() {
    header("Tab 2") { backButton() }
    "This is the second tab"
  }

  control tab3() {
    header("Tab 3") { backButton() }
    "This is the third tab"
  }

  tabSet([("One", "", tab1), ("Two", "", tab2), ("Three", "", tab3)])
}

screen accordion() {
  control section1() {
    "This is the first section"
  }

  control section2() {
    "This is the second section"
  }

  control section3() {
    "This is the third section"
  }

  header("Accordion") { backButton() }
  accordion([("One", section1), ("Two", section2), ("Three", section3)])
}

screen master() {
  var items = Collection<String>("Item 1", "Item 2")

  control detail(item : String) {
    "This shows details about "
    label(item)
    ". For instance, it has length: "
    label(item.length)
  }

  control masterItem(item : String) {
    label(item)
  }

  header("Master/detail") { backButton() }
  masterDetail(items, masterItem, detail)
}

screen charts() {
  header("Chart") { backButton() }

  image(googleChartUrl(type="bvg", data=[ [1,2,3,4,5,4,3,2,1] ], title = "Beautiful bar chart"))
}

screen maps() {
  var position : Coordinates = null
  script {
    async {
      position = getPosition();
    }
  }
  header("Your location") { backButton() }
  cond(position != null) {
    label("Position: " + position.latitude + ", " + position.longitude)
    map(position, zoom=15, width=320, height=400)
  }
  cond(position == null) {
    "Determining current location... (requires recent webkit or Firefox)"
  }
}*/
module MoBL-Completions

imports MoBL-Completions.generated

completions
    //completion keyword  : "screen"
    //completion template : "screen " "e" " () {\n\t  \n}\n"

    completion proposer : editor-complete
    identifier lexical  : [A-Za-z0-9_\$]+
    completion trigger  : "\."
    completion trigger  : "::"

completions

    completion template : Definition =
      "control " <name> "() {\n\t\n}" (blank)

    completion template : Definition =
      "screen " <name> "() {\n\t\n}" (blank)

    completion template : Definition =
      "entity " <name> " {\n\t\n}" (blank)

    completion template : Definition =
      "service " <name> " {\n\tresource someResource() : Dynamic {\n\t\turi = \"/someResource\"\n\t}\n}" (blank)

    completion template : Definition =
      "import " <some::module> (blank)

    completion template : Definition =
      "resource " <some/file.png> (blank)

    completion template : Definition =
      "load " <some/file.js> (blank)

    completion template : Definition =
      "external type " <name> "{\n\t\n}" (blank)

    completion template : Definition =
      "type " <name> "{\n\t\n}" (blank)

    completion template : Definition =
      "external function " <name> "() {\n\t\n\}" (blank)

completions

  completion template : LimitedExp =
    "where " <prop> " = " <value>

  completion template : LimitedExp =
    "order by " <prop> " asc"

  completion template : LimitedExp =
    "limit " <n>

  completion template : LimitedExp =
    "offset " <n>

  completion template : LimitedExp =
    "prefetch " <prop>

completions

    completion template : Statement =
      "if" "(" <e> ") {\n\t\n}" (blank)

    completion template : Statement =
      "if" "(" <e> ") {\n\t\n} else {\n\t\n}" (blank)

    completion template : Statement =
      "for" "(" <x> " in " <coll> ") {\n\t\n}" (blank)

    completion template : Statement =
      "var " <x> " = " <value> ";" (blank)

    completion template : Statement =
      "return " <value> ";" (blank)

    completion template : Statement =
      "screen return " <value> ";" (blank)

completions

    completion template : ScreenElem =
      "var " <x> " = " <value> (blank)

    completion template : ScreenElem =
      "list" "(" <x> " in " <coll> ") {\n\t\n}" (blank)

    completion template : ScreenElem =
      "cond" "(" <e> ") {\n\t\n}" (blank)

completions

    completion template : Definition =
      "@service GET /" "\nfunction " <myService> "(req : Request, res : Response) {\n\t\n}" (blank)

    completion template : Definition =
      "@service PUT /" "\nfunction " <myService> "(req : Request, res : Response) {\n\t\n}" (blank)

    completion template : Definition =
      "@service POST /" "\nfunction " <myService> "(req : Request, res : Response) {\n\t\n}" (blank)

    completion template : Definition =
      "@service DELETE /" "\nfunction " <myService> "(req : Request, res : Response) {\n\t\n}" (blank)

    completion template : Definition =
      "database host " <"localhost"> " name \"dbname\" username \"user\" password \"pass\"" (blank)
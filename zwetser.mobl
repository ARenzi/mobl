application zwetser

title "Zwetser"
database "zwetser"

import mobl
import mobl::ui::generic
import zwetser::logic
import zwetser::data
import twitter

load zwitter.css

screen root() {
  script {
    var authUrl = Twitter.isAuthenticated();
    if(authUrl != "OK") { // Authenticated already
      openUrl(authUrl + "?fromurl=/~zef/mobl/zwetser.html");
    }
    async {
      updateStream();
    }
  }
  header("Timeline")

  <div id="tweets">
  list(update in TwitterUpdate.all().filter("conversationRoot", "=", null).order("lastUpdate", ascending=false)) {
    tweet(update, onclick={ showConversation(update); })
  }
  </div>
}

screen showConversation(update : TwitterUpdate) {
  header("Conversation") {
    backButton("Timeline", onclick={ screen return; })
  }
  <div id="tweets">
    tweet(update)
  </div>
  <h2>"Replies"</h2>
  <div id="tweets">
    list(reply in update.replies.order("date", ascending=true)) {
      tweet(reply)
    }
  </div>
}

control tweet(update : TwitterUpdate, onclick : Callback = null) {
  <div class="tweet" onclick=onclick>
   cond(update.replyCount > 0) {
     float(side="right", distance=20) {
       <span class="replyCount" databind=update.replyCount/>
     }
   }
   <span class="icon"><img src=update.iconUrl width="48" height="48"/></span>
    <span class="text">
      <strong>label(update.screenName) ": "</strong>
      label(update.text)
      <span class="meta">"Posted " label(update.date)</span>
    </span>
  </div>
}

/*
screen newTweet(account : Account) {
  var text = ""
  topRightButton("Tweet", onclick={
    async {
      twitter::postUpdate(account.username, account.password, text);
      mobl::notify::notify("Tweet posted!");
    }
    screen return;
  })
  backButton("Timeline", onclick={ screen return; })
  basicView("Compose") {
    inputs {
      inputText(text)
    }
  }
}

screen replyTweet(update : TwitterUpdate) {
  var text = "@" + update.screenName + " "
  topRightButton("Reply", onclick={
    async {
      twitter::postReply(update.account.username, update.account.password, update.updateId, text);
      mobl::notify::notify("Tweet posted!");
    }
    screen return;
  })
  backButton("Tweet", onclick={ screen return; })
  basicView("Reply @" + update.screenName) {
    inputs {
      inputText(text)
    }
  }
}

screen showUpdates(account : Account) {
  script {
    async {
      updateStream(account);
    }
    async {
      updateMentions(account);
    }
  }
  backButton("Accounts", onclick={ screen return; })
  <img src="lib/img/compose.png" onclick={ newTweet(account); } class="topRight"/>

  control showTweets(coll : Collection<TwitterUpdate>) {
    var limit = 10
    <div id="tweets">
    list(update in coll.limit(limit)) {
      <div class="tweet" onclick={ showUpdate(update); }>
        <span class="icon"><img src=update.iconUrl width="48" height="48"/></span>
        <span class="text">
          <strong>outputString(update.screenName) ": "</strong>
          outputString(update.text)
          <span class="meta">"Posted " outputDate(update.date)</span>
        </span>
      </div>
    }
    altButton("Load more", onclick={ limit = limit + 10; })
    </div>
  }
  control timeline() {
    showTweets(account.updates.filter("mention", "=", false).order("date", false))
  }
  control mentions() {
    showTweets(account.updates.filter("mention", "=", true).order("date", false))
  }
  control search() {
    var phrase = "#mobl"
    var searchPhrase = ""
    var limit = 10
    searchBox(phrase, onsearch={ searchPhrase = phrase; })
    <div id="tweets">
    list(twupdate in twitter::search(searchPhrase).limit(limit)) {
      <div class="tweet">
        <span class="icon"><img src=twupdate.profile_image_url width="48" height="48"/></span>
        <span class="text">
          <strong>outputString(twupdate.from_user) ": "</strong>
          outputString(twupdate.text)
          <span class="meta">"Posted " outputDate(twupdate.created_at)</span>
        </span>
      </div>
    }
    altButton("Load more", onclick={ limit = limit + 10; })
    </div>
  }
  tabset([("All", "lib/toolbar/icon_users.png", timeline), ("Mentions", "lib/toolbar/icon_users.png", mentions), ("Search", "lib/toolbar/icon_users.png", search)])
}

screen showUpdate(update : TwitterUpdate) {
  backButton("Timeline", onclick={ screen return; })
  basicView("Tweet", toolBar=control { toolbarButton("post", onclick={ replyTweet(update); }) }) {
    <div class="bubble">
      outputString(update.text)
      <span class="meta">"Posted " outputDate(update.date)</span>
    </div>
    <div class="postermeta">
      <img src=update.iconUrl width="48" height="48" align="middle"/> " "
      outputString(update.screenName)
    </div>
  }
}*/
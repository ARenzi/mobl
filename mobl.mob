module mobl

external type void {}
external type String { }
external type Int { }
external type Bool { }
external type Text { }
external type Uri { }
external type Callback {}

external type Array<T> { }
external type Object { }

external type Collection<T> {
  function get() : Array<T>
  sync function filter(property : String, op : String, value : Object) : Collection<T>
  sync function order(property : String, ascending : Bool) : Collection<T>
  sync function limit(n : Int) : Collection<T>
  sync function offset(n : Int) : Collection<T>
  sync function add(item : T) : void
  sync function remove(item : T) : void
}

external type Entity<T> {
  static sync function all() : Collection<T>
}

external function log(s : String) : void
external function alert(s : String) : void

external function flush() : void
external sync function add(e : Object) : void
external sync function remove(e : Object) : void

template outputString(s : String) {
  <span databind=s></span>
}

screen promptString(question : String) : String {
  var answer : String := ""
  header(question)
  inputs {
    inputString(answer)
  }
  button("Ok", onclick:={ screen return answer; })  
}

template inputString(s : String, onchange : Callback := null) {
  <li>
    <input type="text" databind=s/>
  </li>
}

template inputs() {
  <ul>
    elements()
  </ul>
}

template inputCheckbox(b : Bool, onchange : Callback := null, onclick : Callback := null) {
  <input type="checkbox" databind=b onchange=onchange onclick=onclick/>
}

template header(title : String) {
  <div id="header">
    <h1 databind=title></h1>
  </div>
}

template ul() {
  <ul>
    elements()
  </ul>
}
 
template listitem(onclick : Callback := null) {
  <li onclick=onclick>elements()</li>
}

template listitemArrow(onclick : Callback := null) {
  <li onclick=onclick class="arrow">elements()</li>
}

template image(url : String, onclick : Callback := null) {
  <img src=url onclick=onclick/>
}

template button(text : String, onclick : Callback := null) {
  <a href="javascript:void(0)" class="redButton" databind=text onclick=onclick></a>
}

template deleteButton(text : String, onclick : Callback := null) {
  <a href="javascript:void(0)" class="button" databind=text onclick=onclick></a>
}

template topRightButton(text : String, onclick : Callback := null) {
  <a href="javascript:void(0)" class="topRightButton" databind=text onclick=onclick></a>
}

template backButton(text : String, onclick : Callback := null) {
  <a href="javascript:void(0)" class="backButton" id="back-button" databind=text onclick=onclick></a>
}

<script>
mobl.alert = function(s, _, callback) {
    alert(s);
    if(callback) callback();
};
mobl.log = function(s, _, callback) {
    console.log(s);
    if(callback) callback();
};
mobl.add = function(e, _, callback) {
    persistence.add(e);
    var allEnt = persistence.define(e._type).all(); // NOTE: define() is a hack!
    allEnt.triggerEvent('add', allEnt, e);
    if(callback) callback();
};
mobl.remove = function(e, _, callback) {
    persistence.remove(e);
    var allEnt = persistence.define(e._type).all();
    allEnt.triggerEvent('remove', allEnt, e);
    if(callback) callback();
};

mobl.flush = function(_, callback) {
    persistence.flush(null, callback);
};

</script>
module example
 
import mobl

entity Task {
  name        : String
  description : Text
  done        : Bool
  tags        : Collection<Tag> (inverse:tasks)
}  
 
entity Tag {
  name   : String
  tasks  : Collection<Task> (inverse:tags)
}

function f(n1 : Int, n2 : Int, n3 : Int) : Int {
  return n1 + n2 * 9; 
}
 
function bla() : Int {
  var n : Int := 1;
  return f(doSomethingInteresting(2), 2 * doSomethingInteresting(1), 3) + 1;
}

function doSomethingInteresting(i : Int) : Int {
  var n : Int := i; 
  n := n + 1;
  //doSomethingInteresting(2);
  alert("Bla");  
  return n;  
} 

template standardLayout(header : String) {
  header(header) 
  elements()
  <hr/>
  "(C) Zef Hemel, 2010"
}

function removeTask(t : Task) {
  remove(t);
  flush();
}

function addTask(t : Task) {
  add(t);
  flush();
}

screen root() { 
  var newTask : Task := Task{}
  standardLayout("All tasks") {
    list(t : Task in Task.all().order("done", false).limit(10)) {  
      listitem {
        inputCheckbox(t.done)[change:=flush()]
        outputString(t.name)
        rightButton("Delete")[click:=removeTask(t)] 
      }
    }
    "Add task: "
    ul {
      listitem { inputString(newTask.name) }
    }
    redButton("Add")[click:=addTask(newTask)]
  }
}

/*
template main() requires body() {
  "Header"
  body()
  "Footer"
}

screen root() {
  tabs {
    tab("All", uri("img/ok.png")) { 
      list(t : Task in Task.all()) {
        listitem { output(t.name) }
      }
    }
    tab("Done", uri("img/ok.png")) { 
      list(t : Task in Task.all()) {
        listitem { output(t.name) }
      }
    }
    tab("Not done", uri("img/ok.png")) { 
      list(t : Task in Task.all()) {
        listitem { output(t.name) }
      }
    }
  }
}

template main requires body() {
  "Header"
  body()
  "Footer"
}

screen whatever() {
  main {
    template body() {
    
    }
  }
}

screen addTask : Task {
  output[id:="ZEF"](8)
}

template listitem {
  <li>elements()</li>
}

template tabs {
  var currentTab : String := ""
  var tabNames : List<String> := []
  var tabImages : List<Uri> := []
  
  <div id="scrollwrapper">
    <div id="content">
      elements()
    </div>
  </div>
  <div id="tabbar">
    list(i : Int in range(tabNames.length)) {
      <div onclick=function() { currentTab := name; } class=currentTab == name ? "selected" : "">
        <img src=tabImages[i]/>
        <br/>
        output(tabNames[i])
      </div>
    }
  </div>
    
  template tab(name : String, image : Uri) {
    init {
      var n : String := "";
      tabNames.append(n);
      tabImages.append(image);
      if(tabNames.length == 1) {
        currentTab := name;
      }
    }
    <div id="tab-" + name class=name == currentTab ? "invisible" : "">
      elements()
    </div>
  }
}

*/
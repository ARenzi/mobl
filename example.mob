module example

import core

entity Task {
  name        : String
  description : Text
  done        : Bool
  tags        : core::Collection<Tag>
}  

entity Tag {
  name   : core::String
  tasks  : core::Collection<Task>
}

function sayHello(name : core::String) : core::String {
  return "Hello, " + name;
}

template standardLayout() {
  "Header"
  elements()
  "Footer"
}

screen root() {
  standardLayout {
   outputString("Hello there!")
  }
}

/*
template main() requires body() {
  "Header"
  body()
  "Footer"
}

screen root() {
  tabs {
    tab("All", uri("img/ok.png")) { 
      list(t : Task in Task.all()) {
        listitem { output(t.name) }
      }
    }
    tab("Done", uri("img/ok.png")) { 
      list(t : Task in Task.all()) {
        listitem { output(t.name) }
      }
    }
    tab("Not done", uri("img/ok.png")) { 
      list(t : Task in Task.all()) {
        listitem { output(t.name) }
      }
    }
  }
}

template main requires body() {
  "Header"
  body()
  "Footer"
}

screen whatever() {
  main {
    template body() {
    
    }
  }
}

screen addTask : Task {
  output[id:="ZEF"](8)
}

template listitem {
  <li>elements()</li>
}

template tabs {
  var currentTab : String := ""
  var tabNames : List<String> := []
  var tabImages : List<Uri> := []
  
  <div id="scrollwrapper">
    <div id="content">
      elements()
    </div>
  </div>
  <div id="tabbar">
    list(i : Int in range(tabNames.length)) {
      <div onclick=function() { currentTab := name; } class=currentTab == name ? "selected" : "">
        <img src=tabImages[i]/>
        <br/>
        output(tabNames[i])
      </div>
    }
  </div>
    
  template tab(name : String, image : Uri) {
    init {
      var n : String := "";
      tabNames.append(n);
      tabImages.append(image);
      if(tabNames.length == 1) {
        currentTab := name;
      }
    }
    <div id="tab-" + name class=name == currentTab ? "invisible" : "">
      elements()
    </div>
  }
}

*/
module generation/compile

imports
  libstratego-lib
  analyze
  declare
  rename
  desugar
  mobl
  generation/emit
  generation/ui
  generation/action
  generation/data
  generation/script
  generation/html
  include/MoBL
  lib/editor-common

strategies
  
  compile =
      (?Module(qid, def*) <+ ?app@Application(qid, _, def*))
      ; where(<debug(!"Now compiling: ")> qid)
      ; analyze
      ; desugar-all
      ; module-to-js
      ; where(path := <qid-to-path> qid
              ; js-filename   := <concat-strings; guarantee-extension(|"js")> [<OutputPath>, "/", path]
              ; index-html-filename   := <concat-strings> [<OutputPath>, "/index.html"])
      ; fp := <fopen> (js-filename, "w")
      ; <fputs> ($[mobl.provides('[<qid-to-js> qid]');
], fp)
      ; <fputs> (<get-all>, fp)
      ; <fclose> fp
	    ; if !app then
	      with(
	        fp2 := <debug; fopen <+ debug(!"Could not open file: "); fail> (index-html-filename, "w")
	        ; <fputs> (<generate-index-html <+ debug(!"Could not generate index.html")> app, fp2)
	        ; <fclose> fp2
	      )
        end
      ; <refresh-workspace-file> js-filename

strategies
  
   qid-to-path =
    is-string
  
  qid-to-path :
    QId(qid, x) -> $[[qids]/[x]]
    with qids := <qid-to-path> qid
    
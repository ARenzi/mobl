module rename

imports
  include/MoBL

strategies
  
  rename-all = alltd(rename)
  
  rename-var : 
   (x, t) -> y
   with y := x{<newname> x}
      ; rules(
           RenameId : x -> y
           TypeOf   : y -> t
        )
  
  rename-ref-var :
   (x, t) -> y
   with y := <rename-var>
      ; rules(
           IsRefVar : y
        )
  
  is-ref :
    y -> <IsRefVar> y
  
  is-ref :
    Var(y) -> <IsRefVar> y
  
  rename :
    Var(x) -> Var(<RenameId> x)

  rename-scope(s) =
    {| RenameId
     : s
     |}

  template-scope(s) =
    {| RenameScope
     : rules ( RenameScope := "template" )
     ; rename-scope(s)
     |}

  action-scope(s) =
    {| RenameScope
     : rules ( RenameScope := "action" )
     ; rename-scope(s)
     |}

  rename :
    Template(name, farg*, req*, body) -> Template(name, farg2*, req*, body2)
    with template-scope( 
           farg2* := <map(\ FArg(x, t) -> FArg(<rename-ref-var> (x, t), t) \)> farg*
           ; body2 := <rename-all> body
         )

	rename :
	  TemplateNoRequires(name, arg*, body) -> TemplateNoRequires(name, arg2*, body2)
	  with template-scope( 
	         arg2* := <map(\ FArg(x, t) -> FArg(<rename-ref-var> (x, t), t) \)> arg*
	         ; body2 := <rename-all> body
	       )

  rename :
    Screen(name, arg*, rt, body) -> Screen(name, arg2*, rt, body2)
    with template-scope( 
           arg2* := <map(\ FArg(x, t) -> (x, t) \; rename-ref-var)> arg*
           ; body2 := <rename-all> body
         )

  rename :
    ScreenNoReturn(name, farg*, body) -> ScreenNoReturn(name, farg2*, body2)
    with template-scope( 
           farg2* := <map(\ FArg(x, t) -> FArg(<rename-ref-var> (x, t), t) \)> farg*
           ; body2 := <rename-all> body
         )

  rename :
    Function(qid, farg*, rt, body) -> Function(qid, farg2*, rt, body2)
    with action-scope( 
           farg2* := <map(\ FArg(x, t) -> FArg(<rename-var> (x, t), t) \)> farg*
           ; body2 := <rename-all> body
         )

  rename :
    FunctionNoReturnType(qid, farg*, body) -> FunctionNoReturnType(qid, farg2*, body2)
    with action-scope( 
           farg2* := <map(\ FArg(x, t) ->FArg(<rename-var> (x, t), t) \)> farg*
           ; body2 := <rename-all> body
         )

  rename :
    SyncFunction(qid, farg*, rt, body) -> SyncFunction(qid, farg2*, rt, body2)
    with action-scope( 
           farg2* := <map(\ FArg(x, t) -> FArg(<rename-var> (x, t), t) \)> farg*
           ; body2 := <rename-all> body
         )

  rename :
    SyncFunctionNoReturnType(qid, farg*, body) -> SyncFunctionNoReturnType(qid, farg2*, body2)
    with action-scope( 
           farg2* := <map(\ FArg(x, t) ->FArg(<rename-var> (x, t), t) \)> farg*
           ; body2 := <rename-all> body
         )

  rename :
    VarDecl(name, t, e) -> VarDecl(<rename-var> (name, t), t, <rename-all> e)
  
  rename :
    ScreenVarDecl(name, t, e) -> ScreenVarDecl(<rename-var> (name, t), t, <rename-all> e)
    
  rename :
    List(x, t, e, body) -> List(x2, t, e2, body2)
    with rename-scope(
           x2 := <rename-var> (x, t)
           ; e2 := <rename-all> e
           ; body2 := <rename-all> body
         )
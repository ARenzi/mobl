module type

imports
  include/MoBL
  rename
  lookup
  
strategies

  type-of = eq-type-of <+ ?Var(<id>); TypeOf
  
  eq-type-of :
    Int(_) -> SimpleType(QId("mobl", "Int"))
    
  eq-type-of :
    String(_) -> SimpleType(QId("mobl", "String"))

  eq-type-of :
    True() -> SimpleType(QId("mobl", "Bool"))
  
  eq-type-of :
    False() -> SimpleType(QId("mobl", "Bool"))

  eq-type-of :
    Null() -> SimpleType(QId("mobl", "Object"))

  eq-type-of :
    Callback(_) -> SimpleType(QId("mobl", "Callback"))

  eq-type-of :
    AnonymousTemplate(_) -> SimpleType(QId("mobl", "Template"))

  eq-type-of :
    Call(qid, e*) -> rt
    where c#([_, _, rt]) := <lookup-function> qid

  eq-type-of :
    Call(qid, e*) -> rt
    where ExternalScreen(_, _, rt) := <lookup-screen> qid

  eq-type-of :
    EntityCons(t, _) -> t

  eq-type-of :
    Var(qid) -> GenericType("Type", [SimpleType(qid)])
    where <lookup-type-aux> SimpleType(qid)

  eq-type-of :
    MethodCall(e, x, e*) -> rt
    where m := <lookup-method> (<type-of> e, x)
        ; (   ExternalMethod(_, _, rt) := m
           <+ ExternalSyncMethod(_, _, rt) := m)
  
  eq-type-of :
    FieldAccess(e, x) -> <lookup-property> (<type-of> e, x)

  eq-type-of :
    BinMethodCall(e1, op, e2) -> <type-of> e1 // @TODO: Fix this
  
strategies
  
  type-compatible =
    ?(t, t)
  
  type-compatible =
    ?(t1, t2)
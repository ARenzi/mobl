application shopping

import mobl
import mobl::ui::ios

entity Item {
  name     : String
  checked  : Bool
  favorite : Bool
  onlist   : Bool
  order    : Num
}

screen editItem(it : Item) {
  header("Edit item")
  topRightButton("Done", onclick={ screen return; })
  inputs {
    inputString(it.name, placeholder="Name")
    item { checkbox(it.favorite, label="favorite") }
    inputNum(it.order, placeholder="Shop order (0 = early, 999=late)")
  }
}

function clean() {
  for(it : Item in Item.all().filter("checked", "=", true)) {
    if(it.favorite) {
      it.checked = false;
      it.onlist = false;
    } else {
      remove(it);
    }
  }
}

control showItemsHeader() {
  header("Items")
  topRightButton("Clean", onclick={ clean(); })
}

control showItems() {
  group {
    list(it in Item.all().filter("onlist", "=", true).order("order", true)) {
      item(onclick={ it.checked = it.checked ? false: true; }) {
        checkbox(it.checked, label=it.name)
        sideButton("Edit", onclick={ editItem(it); })
      }
    }
  }
  quickAdd()
}

control showFavoritesHeader() {
  header("Favorites")
}

control showFavorites() {
  group {
    list(it in Item.all().filter("favorite", "=", true).order("order", true)) {
      item(onclick={ editItem(it); }) {
        label(it.name)
        cond(it.onlist == false) {
          sideButton("Add", onclick={ it.onlist = true; })
        }
      }
    }
  }
}

control quickAdd() {
  var newItem = Item{ order=999, onlist=true }
  group {
    inputString(newItem.name, placeholder="New item")
  }
  altButton("Add", onclick={
    add(newItem);
    newItem = Item{order=999, onlist=true};
  })
}

screen root() {
  tabsetCustomHeaders([("Items", "lib/toolbar/icon_users.png", showItemsHeader, showItems), ("Favorite", "lib/toolbar/icon_users.png", showFavoritesHeader, showFavorites)])
}